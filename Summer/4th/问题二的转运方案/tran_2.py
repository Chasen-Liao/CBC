def calculate_transport_plan():
    # 转运商配置 (ID, 容量, 按TOPSIS得分排序)
    transporters = [
        {'id': 'T3', 'capacity': 6000, 'remaining': 6000},
        {'id': 'T6', 'capacity': 6000, 'remaining': 6000},
        {'id': 'T8', 'capacity': 6000, 'remaining': 6000},
        {'id': 'T2', 'capacity': 6000, 'remaining': 6000},
        {'id': 'T4', 'capacity': 6000, 'remaining': 6000},
        {'id': 'T5', 'capacity': 6000, 'remaining': 6000},
        {'id': 'T1', 'capacity': 6000, 'remaining': 6000},
        {'id': 'T7', 'capacity': 6000, 'remaining': 6000}
    ]
    
    # 根据图片中的供应商数据构建订货量字典
    weekly_orders = {
        'S189': 89.6507,
        'S294': 124.2394,
        'S086': 127.4382,
        'S210': 134.8930,
        'S365': 304.8603,
        'S374': 364.2377,
        'S284': 370.5109,
        'S037': 500.2469,
        'S143': 558.8003,
        'S352': 614.9219,
        'S307': 715.0358,
        'S126': 763.5655,
        'S348': 796.9342,
        'S268': 946.3563,
        'S356': 949.9290,
        'S275': 1148.1673,
        'S151': 1433.7615,
        'S395': 1569.3138,
        'S361': 2113.2016,
        'S201': 2314.7367,
        'S229': 2569.9271
    }
    weekly_orders_week02 = {
    'S003': 103.0538,
    'S007': 45.0575,
    'S074': 88.7445,
    'S080': 126.5350,
    'S294': 124.2394,
    'S114': 72.9570,
    'S123': 37.6490,
    'S086': 127.4382,
    'S210': 134.8930,
    'S365': 304.8603,
    'S374': 364.2377,
    'S284': 370.5109,
    'S143': 558.8003,
    'S266': 43.0700,  # 修正：S266对应的值应为43.0700
    'S352': 614.9219,
    'S307': 715.0358,
    'S282': 1312.2380,  # 修正：S282对应的值应为1312.2380
    'S126': 763.5655,   # 修正：S126对应的值应为763.5655
    'S306': 929.5293,   # 修正：S306对应的值应为929.5293
    'S268': 946.3563,
    'S329': 1136.1142,  # 修正：S329对应的值应为1136.1142
    'S356': 949.9290,
    'S275': 1148.1673,
    'S151': 1433.7615,
    'S395': 1569.3138,
    'S361': 2113.2016,
    'S201': 2314.7367
    }   
    # 第03周供应商订货量字典
    weekly_orders_week03 = {
    'S003': 103.0538,
    'S007': 45.0575,
    'S189': 89.6507,
    'S074': 88.7445,
    'S080': 126.5350,
    'S294': 124.2394,
    'S037': 500.2469,
    'S247': 417.0978,
    'S266': 43.0700,
    'S352': 614.9219,
    'S273': 153.4918,
    'S307': 715.0358,
    'S282': 1312.2380,
    'S348': 796.9342,
    'S306': 929.5293,
    'S329': 1136.1142,
    'S356': 949.9290,
    'S275': 1148.1673,
    'S395': 1569.3138,
    'S361': 2113.2016,
    'S201': 2314.7367
    }
    
    # 按订货量降序排列供应商
    sorted_orders = sorted(weekly_orders_week03.items(), key=lambda x: x[1], reverse=True)
    
    # 存储分配结果
    assignments = []
    
    # 贪心算法分配
    for supplier, amount in sorted_orders:
        assigned = False
        
        # 按优先级顺序寻找可用转运商
        for t in transporters:
            if t['remaining'] >= amount:
                # 分配订单并更新剩余容量
                assignments.append((supplier, t['id'], amount))
                t['remaining'] -= amount
                assigned = True
                break
        
        # 异常处理（实际数据在容量范围内，此代码不会触发）
        if not assigned:
            raise ValueError(f"转运商容量不足，无法分配供应商 {supplier} 的订单")
    
    return assignments

# 计算并输出第01周转运方案
if __name__ == "__main__":
    # 计算转运方案
    plan = calculate_transport_plan()
    
    # 输出结果
    print("供应商   转运商   转运量")
    for assignment in plan:
        print(f"{assignment[0]}   {assignment[1]}   {assignment[2]:.4f}")